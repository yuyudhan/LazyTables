# FilePath: .github/workflows/release.yml

name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag (e.g., v0.1.4)'
        required: true
        type: string

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # macOS Apple Silicon
          - os: macos-latest
            target: aarch64-apple-darwin
            name: lazytables-v${{ github.ref_name }}-aarch64-apple-darwin
          
          # macOS Intel
          - os: macos-13
            target: x86_64-apple-darwin
            name: lazytables-v${{ github.ref_name }}-x86_64-apple-darwin
          
          # Linux x86_64
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            name: lazytables-v${{ github.ref_name }}-x86_64-unknown-linux-gnu
          
          # Linux ARM64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            name: lazytables-v${{ github.ref_name }}-aarch64-unknown-linux-gnu
            use-cross: true
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      
      - name: Install cross-compilation tools
        if: matrix.use-cross == true
        uses: taiki-e/install-action@cross
      
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Build release binary
        if: matrix.use-cross != true
        run: cargo build --release --target ${{ matrix.target }}
      
      - name: Build release binary (cross)
        if: matrix.use-cross == true
        run: cross build --release --target ${{ matrix.target }}
      
      - name: Package binary
        run: |
          cd target/${{ matrix.target }}/release
          tar czf ../../../${{ matrix.name }}.tar.gz lazytables
          cd ../../../
          shasum -a 256 ${{ matrix.name }}.tar.gz > ${{ matrix.name }}.tar.gz.sha256
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: |
            ${{ matrix.name }}.tar.gz
            ${{ matrix.name }}.tar.gz.sha256
  
  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      
      - name: Prepare release files
        run: |
          mkdir -p release
          mv artifacts/*/* release/
          ls -la release/
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.tag || github.ref_name }}
          name: LazyTables ${{ github.event.inputs.tag || github.ref_name }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: release/*

  publish-crate:
    name: Publish to crates.io
    needs: release
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      
      - name: Verify package
        run: cargo package --allow-dirty
      
      - name: Publish to crates.io
        run: cargo publish --allow-dirty
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        continue-on-error: true
  
  update-homebrew-formula:
    name: Update Homebrew Formula
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout tap repository
        uses: actions/checkout@v4
        with:
          repository: yuyudhan/homebrew-lazytables
          token: ${{ secrets.HOMEBREW_TAP_TOKEN }}
          path: homebrew-lazytables

      - name: Download release assets
        run: |
          VERSION=${{ github.ref_name }}
          wget https://github.com/yuyudhan/LazyTables/archive/refs/tags/${VERSION}.tar.gz
          sha256sum ${VERSION}.tar.gz

      - name: Update formula
        run: |
          VERSION=${{ github.ref_name }}
          SHA256=$(sha256sum ${VERSION}.tar.gz | cut -d' ' -f1)
          
          cd homebrew-lazytables
          sed -i "s/version \".*\"/version \"${VERSION#v}\"/" Formula/lazytables.rb
          sed -i "s|url \".*\.tar\.gz\"|url \"https://github.com/yuyudhan/LazyTables/archive/refs/tags/${VERSION}.tar.gz\"|" Formula/lazytables.rb
          sed -i "s/sha256 \".*\"/sha256 \"${SHA256}\"/" Formula/lazytables.rb

      - name: Commit and push changes
        run: |
          cd homebrew-lazytables
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add Formula/lazytables.rb
          git commit -m "Update LazyTables to ${{ github.ref_name }}"
          git push